# -*- coding: utf-8 -*-
"""Nutribuddy-LeafDetection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bv90TF5MRu3DNKPuUCOXvs5lZIX2V_jU

Lettuce plant leaf Quality detection ML model training using YOLOv8 ultralytics



## Steps


- Install YOLOv8 and other packages
- Preparing custom dataset
- Custom Training
- Validate Custom Model
- Inference with Custom Model

Step 1: Install Yolov8 and other packages
"""

# Installing necessary pakages

!pip install ultralytics==8.0.134
!pip install opencv-python-headless
from IPython import display
from ultralytics import YOLO
from IPython.display import display, Image
import ultralytics
import os
ultralytics.checks()
HOME = os.getcwd()
print(HOME)

"""Step 2: Preparing Custom Dataset"""

# Commented out IPython magic to ensure Python compatibility.
!mkdir {HOME}/datasets
# %cd {HOME}/datasets

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="n4HERXqHARvwTX7ZB9kD")
project = rf.workspace("2-xx7t0").project("disease2-t4gyq")
dataset = project.version(7).download("yolov8")

"""Step 3: Model Training"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}

!yolo task=detect mode=train model=yolov8s.pt data={dataset.location}/data.yaml epochs=25 imgsz=800 plots=True

!ls {HOME}/runs/detect/train/

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
Image(filename=f'{HOME}/runs/detect/train/confusion_matrix.png', width=600)

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
Image(filename=f'{HOME}/runs/detect/train/results.png', width=600)

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
Image(filename=f'{HOME}/runs/detect/train/val_batch0_pred.jpg', width=600)

"""Step 4: Validate Custom Model"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}

!yolo task=detect mode=val model={HOME}/runs/detect/train/weights/best.pt data={dataset.location}/data.yaml

"""Step 5: Inference with Custom Model"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
!yolo task=detect mode=predict model={HOME}/runs/detect/train/weights/best.pt conf=0.25 source={dataset.location}/test/images save=True

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'{HOME}/runs/detect/predict3/*.jpg')[:3]:
      display(Image(filename=image_path, width=600))
      print("\n")

project.version(5).deploy(model_type="yolov8", model_path=f"{HOME}/runs/detect/train/")

#Raspberry code


from ultralytics import YOLO
import cv2
import time


model = YOLO('/content/runs/detect/train/weights/best.pt')

img = cv2.imread('/content/52_jpg.rf.0c78c16949f27b5451df87cc78e58875.jpg')

# First run to 'warm-up' the model
model.predict(source=img, save=False, save_txt=False, conf=0.5, verbose=False)

# Second run
t_start = time.monotonic()
results = model.predict(source=img, save=False, save_txt=False, conf=0.5, verbose=False)
dt = time.monotonic() - t_start
print("dT:", dt)

# Show results
boxes = results[0].boxes
names = model.names
print(names)
confidence, class_ids = boxes.conf, boxes.cls.int()
rects = boxes.xyxy.int()
for ind in range(boxes.shape[0]):
    print("Rect:", names[class_ids[ind].item()], confidence[ind].item(), rects[ind].tolist())